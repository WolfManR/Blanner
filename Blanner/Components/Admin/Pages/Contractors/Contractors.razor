@page "/Admin/Contractors"

@inject ApplicationDbContext DbContext
@inject NavigationManager NavManager
@inject HttpClient Http

<FluentGrid Justify="JustifyContent.SpaceBetween">
	<FluentGridItem Style="min-width: 200px;">
		<FluentLabel Typo="Typography.PageTitle">Contractors</FluentLabel>
	</FluentGridItem>
	<FluentGridItem Justify="JustifyContent.FlexEnd" Gap="10px">
		<FluentAnchor Appearance="Appearance.Accent" Href="/Admin/Contractors/0">New</FluentAnchor>
	</FluentGridItem>
</FluentGrid>

<FluentDataGrid TGridItem="ContractorListView" Items="@Query" GridTemplateColumns=".5fr 2fr 1fr 1fr .5fr .6fr">
	<PropertyColumn Property="@(p => p.Id)" Title="№" />
	<PropertyColumn Property="@(p => p.Name)" Sortable="true" />
	<TemplateColumn Title="Actions">
		<FluentAnchor IconEnd="@(new Icons.Regular.Size16.Edit())" Href="@($"/Admin/Contractors/{context.Id}")" />
		<FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => Delete(context.Id))" />
	</TemplateColumn>
</FluentDataGrid>

@code {
	class ContractorListView {
		public int Id { get; set; }
		public required string Name { get; set; }
	}

	IQueryable<ContractorListView> Query => DbContext.Contractors.Select(x => new ContractorListView() {
			Id = x.Id,
			Name = x.Name
		});

	private async Task Delete(int Id) {
		var url = NavManager.ToAbsoluteUri("api/goals/delete").AbsoluteUri;

		var response = await Http.PostAsJsonAsync(url, Id);

		NavManager.Refresh(true);
	}

}